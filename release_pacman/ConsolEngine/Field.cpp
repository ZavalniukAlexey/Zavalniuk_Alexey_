#include "Field.h"
#include "Consts.h"


Field::Field() {
	
}


void Field::setFieldChar(const int x, const int y, const char c) {
	field_[x][y] = c;
}

char Field::getFieldChar(const  int i, const int j) {
	return field_[i][j];
}

void Field::resetField() {
	char f[38][31] = {
"++++++++++++++++++++++++++++++",
"+   Score:                   +",
"+   Level:                   +",
"+############################+",
"+#............##............#+",
"+#.####.#####.##.#####.####.#+",
"+#.####.#####.##.#####.####.#+",
"+#.####.#####.##.#####.####.#+",
"+#..........................#+",
"+#.####.##.########.##.####.#+",
"+#.####.##.########.##.####.#+",
"+#a.....##....##....##.....a#+",
"+######.#####.##.#####.######+",
"+######.#####.##.#####.######+",
"+######.##          ##.######+",
"+######.## ######## ##.######+",
"+######.## #      # ##.######+",
"+      .   #      #   .      +",
"+######.## #      # ##.######+",
"+######.## ######## ##.######+",
"+######.##          ##.######+",
"+######.##.########.##.######+",
"+######.##.########.##.######+",
"+#............##............#+",
"+#.####.#####.##.#####.####.#+",
"+#.####.#####.##.#####.####.#+",
"+#a..##................##..a#+",
"+###.##.##.########.##.##.###+",
"+###.##.##.########.##.##.###+",
"+#......##....##....##......#+",
"+#.##########.##.##########.#+",
"+#.##########.##.##########.#+",
"+#..........................#+",
"+############################+",
"+   Lives left:              +",
"+                            +",
"++++++++++++++++++++++++++++++"
	};
	for (int i = 0; i < setFieldX(); i++)
		for (int j = 0; j < setFieldY(); j++)
			field_[i][j] = f[i][j];
}

int Field::countStars() const {
	int counter = 0;
	for (int i = 0; i < setFieldX(); i++)
		for (int j = 0; j < setFieldY(); j++)
		{
			if (field_[i][j] == '.')
				counter++;
		}
	return counter;
}

int Field::getFieldScore() const {
	int stars = getMaxScore() / getScoreMultiplier();
	return (stars - (countStars()) * getScoreMultiplier());
}



Field::~Field() {
}
